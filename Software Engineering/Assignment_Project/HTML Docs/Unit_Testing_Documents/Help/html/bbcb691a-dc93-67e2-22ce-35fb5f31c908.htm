<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Assert.ThrowsException Method</title><meta name="Title" content="ThrowsException" /><meta name="Help.Id" content="Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Microsoft.VisualStudio.TestTools.UnitTesting" /><meta name="guid" content="bbcb691a-dc93-67e2-22ce-35fb5f31c908" /><meta name="tocFile" content="../toc/IDCC0DB0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Assert<span id="LSTB9706AD0_0" data-languageSpecificText="cpp=::|nu=."></span>Throws<wbr />Exception Method</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Overload List</h2><div id="IDACASection"><table id="OverloadList" class="table is-hoverable"><tr><td><a href="18b968a2-24a9-0e7f-c5e7-d11a35ec6557.htm">ThrowsException<span id="LSTB9706AD0_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr><tr><td><a href="10f3c90d-ff9a-ff06-ef57-4532b0c0f695.htm">ThrowsException<span id="LSTB9706AD0_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTB9706AD0_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Object<span id="LSTB9706AD0_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr><tr><td><a href="5fdbff3a-22dc-01a2-b01d-1ef991039700.htm">ThrowsException<span id="LSTB9706AD0_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, String)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr><tr><td><a href="ad24e30c-7286-0f93-b57f-32cea6178d6a.htm">ThrowsException<span id="LSTB9706AD0_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTB9706AD0_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Object<span id="LSTB9706AD0_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr><tr><td><a href="f9c18aff-e3ad-b94e-e03b-55845ef6109f.htm">ThrowsException<span id="LSTB9706AD0_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, String, <span id="LSTB9706AD0_15" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTB9706AD0_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr><tr><td><a href="2f66aa64-1d97-7688-c0b8-9d16af9de2ea.htm">ThrowsException<span id="LSTB9706AD0_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTB9706AD0_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTB9706AD0_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Object<span id="LSTB9706AD0_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String, <span id="LSTB9706AD0_21" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTB9706AD0_22" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the code specified by delegate <span class="parameter">action</span> throws exact given exception of type <span class="parameter">T</span> (and not of derived type)
            and throws <span class="code">AssertFailedException</span> if code does not throws exception or throws exception of type other than <span class="parameter">T</span>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="59e52a5a-35c1-5291-e1a1-6e392b04e9c9.htm">Assert Class</a></div><div><a href="153fa9a6-2752-6415-48c1-3e793872a6dd.htm">Microsoft.VisualStudio.TestTools.UnitTesting Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Overload List</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>