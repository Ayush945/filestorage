<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>CollectionAssert Class</title><meta name="Title" content="CollectionAssert" /><meta name="Help.Id" content="T:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Microsoft.VisualStudio.TestTools.UnitTesting" /><meta name="guid" content="e853ec07-bddf-a069-5990-3274efd0686f" /><meta name="Description" content="A collection of helper classes to test various conditions associated with collections within unit tests. If the condition being tested is not met, an exception is thrown." /><meta name="tocFile" content="../toc/ID0DB0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Collection<wbr />Assert Class</h1><div class="summary">
            A collection of helper classes to test various conditions associated
            with collections within unit tests. If the condition being tested is not
            met, an exception is thrown.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="153fa9a6-2752-6415-48c1-3e793872a6dd.htm">Microsoft.VisualStudio.TestTools.UnitTesting</a><br /><strong>Assembly:</strong> Microsoft.VisualStudio.TestPlatform.TestFramework (in Microsoft.VisualStudio.TestPlatform.TestFramework.dll) Version: 14.0.7126.11<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">CollectionAssert</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">CollectionAssert</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">CollectionAssert</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">CollectionAssert</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">CollectionAssert</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDBEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="868b9a94-5ce3-7682-4c0c-6cf1dcc29ceb.htm">CollectionAssert</a></td><td>Initializes a new instance of the <span class="selflink">CollectionAssert</span> class</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDVEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="cddc37f0-0069-6e1c-27a3-6f1e37261fc1.htm">That</a></td><td>
            Gets the singleton instance of the CollectionAssert functionality.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDFEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="a335bb62-8a03-9496-44a7-8a9e18563b6a.htm">AllItemsAreInstancesOfType(ICollection, Type)</a></td><td>
            Tests whether all elements in the specified collection are instances
            of the expected type and throws an exception if the expected type is
            not in the inheritance hierarchy of one or more of the elements.
            </td></tr><tr><td><a href="98992d40-11f0-21f7-035c-a0db0bb746cb.htm">AllItemsAreInstancesOfType(ICollection, Type, String)</a></td><td>
            Tests whether all elements in the specified collection are instances
            of the expected type and throws an exception if the expected type is
            not in the inheritance hierarchy of one or more of the elements.
            </td></tr><tr><td><a href="13f0b19d-3dda-45ee-dabb-c646473ca32c.htm">AllItemsAreInstancesOfType(ICollection, Type, String, <span id="LSTEEA95A91_0" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether all elements in the specified collection are instances
            of the expected type and throws an exception if the expected type is
            not in the inheritance hierarchy of one or more of the elements.
            </td></tr><tr><td><a href="3c82a6cc-4514-1350-b4d7-2c6560dad4f8.htm">AllItemsAreNotNull(ICollection)</a></td><td>
            Tests whether all items in the specified collection are non-null and throws
            an exception if any element is null.
            </td></tr><tr><td><a href="e8f9801d-3bd6-79e4-e395-b511982d1e90.htm">AllItemsAreNotNull(ICollection, String)</a></td><td>
            Tests whether all items in the specified collection are non-null and throws
            an exception if any element is null.
            </td></tr><tr><td><a href="9c02ca1a-3ab1-ce79-47ee-76f4a6fb7eed.htm">AllItemsAreNotNull(ICollection, String, <span id="LSTEEA95A91_2" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether all items in the specified collection are non-null and throws
            an exception if any element is null.
            </td></tr><tr><td><a href="8f92c310-6465-b5b3-471d-d2d9d9c60336.htm">AllItemsAreUnique(ICollection)</a></td><td>
            Tests whether all items in the specified collection are unique or not and
            throws if any two elements in the collection are equal.
            </td></tr><tr><td><a href="3edb85f0-cd4f-7b25-1fa3-0233bb7c3a44.htm">AllItemsAreUnique(ICollection, String)</a></td><td>
            Tests whether all items in the specified collection are unique or not and
            throws if any two elements in the collection are equal.
            </td></tr><tr><td><a href="63398319-d78f-88f2-dc22-7b1840e655b7.htm">AllItemsAreUnique(ICollection, String, <span id="LSTEEA95A91_4" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether all items in the specified collection are unique or not and
            throws if any two elements in the collection are equal.
            </td></tr><tr><td><a href="37ede5f1-34ec-4960-e872-645e70af5be0.htm">AreCollectionsEqual</a></td><td> </td></tr><tr><td><a href="0801bb09-6967-d779-4ccc-682473a18594.htm">AreEqual(ICollection, ICollection)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="ba9bbd3a-dd69-0e40-4abb-539b628908e8.htm">AreEqual(ICollection, ICollection, IComparer)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="1187ce65-5811-7145-29b7-74e5ae022575.htm">AreEqual(ICollection, ICollection, String)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="8e2aeda9-9ded-3175-315e-3457c4920622.htm">AreEqual(ICollection, ICollection, IComparer, String)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="8c406250-9f11-47d2-c67f-92d133ae12d3.htm">AreEqual(ICollection, ICollection, String, <span id="LSTEEA95A91_6" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="164fc104-371b-c17b-03f3-a41568d55d9e.htm">AreEqual(ICollection, ICollection, IComparer, String, <span id="LSTEEA95A91_8" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collections are equal and throws an exception
            if the two collections are not equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="a1c3fae6-5c8b-4cec-5a67-f2bf8046734a.htm">AreEquivalent(ICollection, ICollection)</a></td><td>
            Tests whether two collections contain the same elements and throws an
            exception if either collection contains an element not in the other
            collection.
            </td></tr><tr><td><a href="a791934b-c965-08af-9770-5db6002cb016.htm">AreEquivalent(ICollection, ICollection, String)</a></td><td>
            Tests whether two collections contain the same elements and throws an
            exception if either collection contains an element not in the other
            collection.
            </td></tr><tr><td><a href="6b483a4f-c953-b0fd-7f2f-d26a0707ad1b.htm">AreEquivalent(ICollection, ICollection, String, <span id="LSTEEA95A91_10" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether two collections contain the same elements and throws an
            exception if either collection contains an element not in the other
            collection.
            </td></tr><tr><td><a href="db4cfdf3-bbe3-5013-ba8e-d1b76ca5d514.htm">AreNotEqual(ICollection, ICollection)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="45b86353-4105-8fa0-6308-e0ac34e8b99b.htm">AreNotEqual(ICollection, ICollection, IComparer)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="46da6cc6-5f8a-5d77-3b87-ef385dca17dd.htm">AreNotEqual(ICollection, ICollection, String)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="867ceb41-74b4-b3a9-62b6-90686dbb7ca3.htm">AreNotEqual(ICollection, ICollection, IComparer, String)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="45adde46-5afe-d739-ca28-64b0edbc9ac8.htm">AreNotEqual(ICollection, ICollection, String, <span id="LSTEEA95A91_12" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Whether two elements are the same
            is checked using <span class="noLink">Equals(Object, Object)</span> method.
            Different references to the same value are considered equal.
            </td></tr><tr><td><a href="6899c899-41bf-18de-e318-14562d8bb49c.htm">AreNotEqual(ICollection, ICollection, IComparer, String, <span id="LSTEEA95A91_14" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collections are unequal and throws an exception
            if the two collections are equal. Equality is defined as having the same
            elements in the same order and quantity. Different references to the same
            value are considered equal.
            </td></tr><tr><td><a href="14dc84a3-0f05-4651-2758-6f6901f44656.htm">AreNotEquivalent(ICollection, ICollection)</a></td><td>
            Tests whether two collections contain the different elements and throws an
            exception if the two collections contain identical elements without regard
            to order.
            </td></tr><tr><td><a href="15d12352-6dfe-64a3-bdf2-8f1647e2e12d.htm">AreNotEquivalent(ICollection, ICollection, String)</a></td><td>
            Tests whether two collections contain the different elements and throws an
            exception if the two collections contain identical elements without regard
            to order.
            </td></tr><tr><td><a href="0283360f-2bb9-b0ee-1e54-39da87034038.htm">AreNotEquivalent(ICollection, ICollection, String, <span id="LSTEEA95A91_16" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_17" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether two collections contain the different elements and throws an
            exception if the two collections contain identical elements without regard
            to order.
            </td></tr><tr><td><a href="29f18222-bbe3-6cbb-76b2-a88961e288d6.htm">Contains(ICollection, Object)</a></td><td>
            Tests whether the specified collection contains the specified element
            and throws an exception if the element is not in the collection.
            </td></tr><tr><td><a href="c850728f-7a34-a21e-1d49-491c7c9f4690.htm">Contains(ICollection, Object, String)</a></td><td>
            Tests whether the specified collection contains the specified element
            and throws an exception if the element is not in the collection.
            </td></tr><tr><td><a href="ef55f648-7121-270c-795a-918112b7b3cd.htm">Contains(ICollection, Object, String, <span id="LSTEEA95A91_18" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collection contains the specified element
            and throws an exception if the element is not in the collection.
            </td></tr><tr><td><a href="6409a48c-2f9e-45e7-a439-5e21f2983594.htm">DoesNotContain(ICollection, Object)</a></td><td>
            Tests whether the specified collection does not contain the specified
            element and throws an exception if the element is in the collection.
            </td></tr><tr><td><a href="cb4d7841-c4b0-2625-7805-e9a24d36ea98.htm">DoesNotContain(ICollection, Object, String)</a></td><td>
            Tests whether the specified collection does not contain the specified
            element and throws an exception if the element is in the collection.
            </td></tr><tr><td><a href="afa1c5a8-fea5-5faa-fa64-fb6dc230d68e.htm">DoesNotContain(ICollection, Object, String, <span id="LSTEEA95A91_20" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether the specified collection does not contain the specified
            element and throws an exception if the element is in the collection.
            </td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="8c587d7c-9bbc-a3ac-c0f7-cfbe59c1cc86.htm">FindMismatchedElement</a></td><td>
            Finds a mismatched element between the two collections. A mismatched
            element is one that appears a different number of times in the
            expected collection than it does in the actual collection. The
            collections are assumed to be different non-null references with the
            same number of elements. The caller is responsible for this level of
            verification. If there is no mismatched element, the function returns
            false and the out parameters should not be used.
            </td></tr><tr><td><a href="1530126c-f48c-cdaa-f13e-914002dec4bc.htm">GetElementCounts</a></td><td>
            Constructs a dictionary containing the number of occurrences of each
            element in the specified collection.
            </td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function. <br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="76c63a29-f533-d97d-003b-dfe3df910a2f.htm">IsNotSubsetOf(ICollection, ICollection)</a></td><td>
            Tests whether one collection is not a subset of another collection and
            throws an exception if all elements in the subset are also in the
            superset.
            </td></tr><tr><td><a href="5a980642-2526-0dc7-e673-29bb9ab58861.htm">IsNotSubsetOf(ICollection, ICollection, String)</a></td><td>
            Tests whether one collection is not a subset of another collection and
            throws an exception if all elements in the subset are also in the
            superset.
            </td></tr><tr><td><a href="7ef50f3c-6751-f2a6-430d-d4e05b4c71d0.htm">IsNotSubsetOf(ICollection, ICollection, String, <span id="LSTEEA95A91_22" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether one collection is not a subset of another collection and
            throws an exception if all elements in the subset are also in the
            superset.
            </td></tr><tr><td><a href="3c11bbcb-e88e-5049-0eff-b85585968d66.htm">IsSubsetOf(ICollection, ICollection)</a></td><td>
            Tests whether one collection is a subset of another collection and
            throws an exception if any element in the subset is not also in the
            superset.
            </td></tr><tr><td><a href="c832af2a-efba-9bac-13f9-70d5385c0d6c.htm">IsSubsetOf(ICollection, ICollection, String)</a></td><td>
            Tests whether one collection is a subset of another collection and
            throws an exception if any element in the subset is not also in the
            superset.
            </td></tr><tr><td><a href="aeac465f-73fc-b216-dc2a-f13f79e646c5.htm">IsSubsetOf(ICollection, ICollection, String, <span id="LSTEEA95A91_24" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEEA95A91_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Tests whether one collection is a subset of another collection and
            throws an exception if any element in the subset is not also in the
            superset.
            </td></tr><tr><td><a href="9806e2a3-ac8a-9f67-fcc5-45fd48f875e7.htm">IsSubsetOfHelper</a></td><td>
            Determines whether the first collection is a subset of the second
            collection. If either set contains duplicate elements, the number
            of occurrences of the element in the subset must be less than or
            equal to the number of occurrences in the superset.
            </td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="f915691d-fbab-bf11-32b3-414c992abd1d.htm">that</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="153fa9a6-2752-6415-48c1-3e793872a6dd.htm">Microsoft.VisualStudio.TestTools.UnitTesting Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>